platform :ios do
    flavor = nil
    user = ENV["FASTLANE_USER"]
    app_identifier = ""
    team_name= ""
    team_id = ""
    git_user = ENV["GIT_USER"]
    git_pass = ENV["GIT_PASS"]
    team_itc_id = ""
    scheme = nil

    lane :set_env_variables do
            setup_ci

            ENV["FASTLANE_TEAM_NAME"] = team_name
            ENV["FASTLANE_ITC_TEAM_NAME"] = team_name
            ENV["APP_IDENTIFIER"] = app_identifier
            ENV["TEAM_ID"] = team_id
            ENV["FASTLANE_TEAM_ID"] = team_id
            ENV["TEAM_ITC_ID"] = team_itc_id
            ENV["MATCH_APP_IDENTIFIER"] = app_identifier
            ENV["MATCH_GIT_URL"] = "https://github.com/NerdUnited-Galvan/galvan_app_match.git"
            ENV["MATCH_TYPE"] = "appstore"
#             ENV["MATCH_KEYCHAIN_PASSWORD"] = ENV["MATCH_PASSWORD"]
            if !is_ci
                ENV["MATCH_USERNAME"] = ENV["FASTLANE_USER"]
            end
            ENV["PILOT_APP_IDENTIFIER"] = app_identifier
            ENV["PILOT_TEAM_ID"]= team_id
            ENV["PILOT_TEAM_NAME"]=team_name
            ENV["PILOT_IPA"] = "./build/Runner.ipa"
            ENV["PILOT_SKIP_WAITING_FOR_BUILD_PROCESSING"] = "true"
            ENV["PILOT_SKIP_SUBMISSION"] = "true"
            ENV["FL_PROJECT_SIGNING_PROJECT_PATH"] = "Runner.xcodeproj"
            ENV["FL_PROJECT_SIGNING_TARGET"] = "Runner"
            ENV["FL_PROJECT_SIGNING_BUILD_CONFIGURATIONS"] = "Release"
            ENV["FL_PROJECT_USE_AUTOMATIC_SIGNING"] = "false"
            ENV["FL_CODE_SIGNING_IDENTITY"] = "iPhone Distribution"
    end

desc "Sync Signing"
  lane :signing do
    sync_code_signing(
    readonly: is_ci,
    type: "appstore",
        git_basic_authorization: Base64.strict_encode64("#{git_user}:#{git_pass}"),
        api_key: app_store_connect_api_key(
                       key_id: ENV["APPLE_ID"],
                       issuer_id: ENV["APPLE_ISSUER_ID"],
                       key_content: ENV["APPLE_KEY_CONTENT"]
                     )
    )
  end

  desc "Build Binary"
  lane :build do
    signing

        puts "Fastlane Building Flutter App"
        Dir.chdir "../.." do
            sh("flutter", "clean")
            sh("flutter", "pub", "get")
            sh("flutter", "build", "ios", "--flavor", flavor, "-t", "lib/main_#{flavor}.dart")
        end

    mapping = Actions.lane_context[SharedValues::MATCH_PROVISIONING_PROFILE_MAPPING]

    build_ios_app(
        workspace: "Runner.xcworkspace",
        silent: true,
        scheme: scheme,
        configuration: "Release-#{scheme}",
        export_method: "app-store",
        output_directory: "./build",
    )
  end

  desc "Release to Appstore"
  lane :release do

    build
    upload_to_testflight(
      api_key: apikey,
      ipa: './build/Runner.ipa',
      app_identifier: app_identifier,
    )

  end

    lane :build_dev do
        flavor = "dev"
        scheme = "dev"
        app_identifier = "com.appname.dev"

        set_env_variables

        build
    end

    lane :release_dev do
        build_dev
        upload_to_testflight
    end
